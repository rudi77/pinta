# Development Environment
version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: pinta_db_dev
    environment:
      - POSTGRES_DB=maler_kostenvoranschlag_dev
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d maler_kostenvoranschlag_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: pinta_redis_dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: pinta_backend_dev
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:dev_password@db:5432/maler_kostenvoranschlag_dev
      - DATABASE_POOL_MAX_SIZE=20
      - DATABASE_POOL_OVERFLOW=10
      - SECRET_KEY=dev-super-secret-jwt-key-must-be-at-least-32-characters-long-change-in-production
      - ACCESS_TOKEN_EXPIRE_MINUTES=15
      - REFRESH_TOKEN_EXPIRE_DAYS=7
      - BCRYPT_ROUNDS=12
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ALLOWED_ORIGINS=http://localhost:5173,http://localhost:3000
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - STRIPE_PRICE_ID=${STRIPE_PRICE_ID}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - MAX_FILE_SIZE=10485760
      - UPLOAD_DIR=/app/uploads
      - RATE_LIMIT_REQUESTS=5
      - RATE_LIMIT_WINDOW_MINUTES=15
      - DEBUG=true
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - uploads_dev:/app/uploads
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: pinta_frontend_dev
    environment:
      - VITE_API_URL=http://localhost:8000
      - VITE_STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    command: ["npm", "run", "dev"]

volumes:
  postgres_data_dev:
  redis_data_dev:
  uploads_dev:

networks:
  default:
    name: pinta_network_dev